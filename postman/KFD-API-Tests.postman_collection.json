{
	"info": {
		"_postman_id": "bd3f36b5-41f7-45d6-a441-3adbdfb74eb3",
		"name": "API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33264061"
	},
	"item": [
		{
			"name": "Ping",
			"item": [
				{
					"name": "Ping Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200 OK', () => pm.response.to.have.status(200));",
									"pm.test('Status is OK', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.status).to.eql('ok');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/ping",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Creating User",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200 OK', () => pm.response.to.have.status(201));",
									"pm.test('User created', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.email).to.eql('stepan@example.com');",
									"    pm.collectionVariables.set('created_user_id', json.id);",
									"    pm.collectionVariables.set('created_user_email', json.email);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"stepan@example.com\",\n  \"password\": \"newpassword123\",\n  \"login\": \"moroz\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Login Already Exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 400 BAD REQUEST', () => pm.response.to.have.status(400));",
									"pm.test('User is not created', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.error).to.eql('Login already exists');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"stepan@example.com\",\n  \"password\": \"newpassword123\",\n  \"login\": \"moroz\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Email Already Exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 400 BAD REQUEST', () => pm.response.to.have.status(400));",
									"pm.test('User is not created', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.error).to.eql('Login already exists');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"stepan@example.com\",\n  \"password\": \"newpassword123\",\n  \"login\": \"moroz\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 201 Created', () => pm.response.to.have.status(201));",
									"pm.test('Has access token', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.accessToken).to.be.a('string');",
									"});",
									"pm.test('Has refresh token', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.refreshToken).to.be.a('string');",
									"});",
									"pm.collectionVariables.set('access_token', pm.response.json().accessToken);",
									"pm.collectionVariables.set('refresh_token', pm.response.json().refreshToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"moroz\",\n  \"password\": \"newpassword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 401 Unauthorized', () => pm.response.to.have.status(401));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"wro\",\n  \"password\": \"wrong\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200 OK', () => pm.response.to.have.status(200));",
									"pm.test('New access token received', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.access_token).to.not.eql(pm.collectionVariables.get('access_token'));",
									"    pm.collectionVariables.set('access_token', json.accessToken);",
									"    pm.collectionVariables.set('refresh_token', json.refreshToken);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200 OK', () => pm.response.to.have.status(200));",
									"pm.test('Users list is array', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200 OK', () => pm.response.to.have.status(200));",
									"pm.test('Correct user data', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json.id).to.eql(pm.collectionVariables.get('created_user_id'));",
									"    pm.expect(json.email).to.eql(pm.collectionVariables.get('created_user_email'))",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/users/{{created_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"{{created_user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Boards",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/board",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"board"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Board",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"board1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/board",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"board"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		},
		{
			"key": "created_user_id",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "refresh_token",
			"value": ""
		},
		{
			"key": "created_user_email",
			"value": ""
		}
	]
}